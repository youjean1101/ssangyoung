# 데이터 과학과 빅데이터 knowledge map
1. 데이터 과학
	관련 분야 : 컴퓨터 과학, 통계학
2. 빅데이터 (처리 대상에 따른 분류)
	1) 저장 기술
		- 하둡, NoSQL
	2) 분석 기술
		- 기계학습, 데이터 마이닝
	3) 표현 기술
		- 데이터 시각화
# 데이터 과학
1. 필요성
	1) 4차 산업혁명 시대
		- 빅데이터, 사물 인터넷, 인공지능 등 핵심기술의 중심에 데이터가 있음
		- 21세기의 원유는 데이터
	2) 데이터의 방대한 규모와 다양한 형태
		- 전통적인 방식으로 수집하고 저장하는데 한계가 있음
	3) 다양해진 데이터 활용에 대한 요구
		- 단순히 데이터를 분류하고 검색하는 것을 넘어, 방대한 양의 데이터 속에 숨겨진 규칙과 패턴을 찾아내 문제 해결에 활용하고 
			미래의 일을 예측하여 미리 준비하기를 원함.

2. 데이터 과학의 개념과 목표
	1) 개념
		- 데이터를 수집한 후 분석을 통해 데이터를 정확히 이해함으로써 그 속에 숨겨진 새로운 지식을 발견하고, 
			이를 문제해결에 활용하는 모든 과정의 활동 데이터 생성, 수집, 저장, 분석, 표현의 전 과정을 포함
		- 활동을 지원하는 수단이나 기술도 포함
	2) 목표
		- 수집된 데이터로부터 가공된 정보를 거쳐 지식과 지혜를 추출하는 것

3. 데이터 과학의 적용 예
	1) 게임 회사에서 동시 접속자 수, 아이템 구매 정보 등을 분석하여 마케팅과 새로운 게임 개발 활용
	2) 선거 전략을 세우고 당선자를 예측
	3) 선수, 경기장, 날씨 등의 데이터를 분석하여 스포츠 경기 결과를 예측

4. DIKW(Data-Information-Knowledge-Wisdom) 계층 구조
	1) 데이터
		관찰하거나 측정하여 수집한 사실이나 값
		ex) 출판사에서 3년간 1월부터 12월까지 매달 책의 판매량을 조사한 결과
	2) 정보
		상황에 대한 이래를 바탕으로 데이터를 목적에 맞게 가공한 것
		ex) 연간 분기별 책 판매량의 합계를 계산한 것
	3) 지식
		규칙이나 패턴을 통해 찾아낸 의미 있고 유용한 정보
		ex) 연간 분기별 책 판매량을 분석하여 3분기에 책의 판매량이 증가하는 규칙과 그 원인을 찾아낸 것
	4) 지혜
		지식에 통찰력을 더해 새롭게 창의적인 아이디어를 도출한 것
		ex) 찾아낸 지식을 토대로 내년 3분기에 새로 출간할 책의 컨텐츠를 기획하고 적합한 홍보 전략을 세우는 것
	5) 계층단계
		데이터 ==(상황에 대한 이해) ==> 정보 ==(의미부여)==> 지식 ===(통찰력) ==> 지혜
	
5. 데이터 과학의 특징
	- 컴퓨터과학, 통계학, 적용 분야에 대한 이해를 필요로 하는 복합적인 기술
	1) 컴퓨터 과학기술
		프로그래밍, 데이터 마이닝, 기계학습, 시각화
	2) 수학과 통계지식
		확률과 통계, 시각화
	3) 적용 분야의 전문지식

6. 빅데이터의 개념
	1) 좁은 정의
		기존 데이터베이스가 저장하고 관리할 수 있는 범위를 넘어서는 대규모의 다양한 데이터
	2) 넓은 정의
		대규모 데이터를 저장 및 관리하는 기술과 가치 있는 정보를 만들기 위해 분석하는 기술 포함

7. 빅데이터 활용 사례
	1) 아마존 닷컴, 구글, 페이스북, 정치 분야
		==> 여러 분야에서 다양하게 성향을 분석하여 앞으로 마케팅 전략 및 선거 전략으로 활용하고 있다.

8. 빅데이터의 기본 특징 : 3V
	1) Volume 데이터량
		- 테라바이트 단위 이상의 대량 데이터
	2) Velocity 속도
	3) Variety 다양성

9. 빅데이터의 확장된 특징 : 7V
	4) Value 가치
	5) Veracity 정확성
	6) Visualization 시각화
	7) Variability 가변성

10. 빅데이터의 확장된 특징
	빅데이터는 빠른 속도로 생성되는 다양한 데이터를 정확성을 유지하도록 가공하고, 
	맥락에 따른 가변성을 고려한 분석을 통해 가치 있는 결과를 도출해서 이를 이해하기 쉽게
	시각화하여 제공하는 것이 중요

11. 빅데이터의 기술
	1) 저장 기술
	2) 분석 기술
		- 텍스트 마이닝(text mining)
			반정형 또는 비정형 텍스트에서 자연어 처리 기술로 정보를 추출하고 가공함.
		- 오피니언 마이닝(opinion mining)
			SNS, 블로그, 게시판 등에 기록된 사용자들의 의견을 수직하고 분석하여, 
			제품이나 서비스에 대한 긍정, 부정, 중립 등의 선호도를 추출
		- 소셜네트워크 분석(social network analysis)
			소셜네트워크의 연결 구조나 강도 등을 바탕으로 소셜 네트워크에 나타난 영향력, 관심사, 성향, 행동패턴 등을 추출
		- 군집분석(cluster analysis)
			데이터간의 유사도를 측정한 후 이를 바탕으로 특성이 비슷한 데이터를 합쳐가면서 최종적으로 유사 특성의 데이터 집합을 추출
			
	3) 표현 기술
		 - R
		 		통계 기반 데이터 분석과 다양한 시각화를 위한 언어와 개발 환경 제공
		 		- 데이터 분석을 통해 추출한 의미와 가치를 시각적으로 표현
		 		특징
		 		- 오픈소스
		 		- 기본 통계 기법부터 최신 데이터 마이닝 기법까지 적용 가능
		 		- 다양한 프로그래밍 언어와 연동 가능하고 다양한 운영체제 지원
		 		- 하둡환경에서 분산 처리를 지원하는 라이브러리를 제공

12. 빅데이터
	1) 이전 데이터 VS 빅데이터
		1) 데이터 유형
			- 정형화된 문자, 수치 데이터 중심
			- 정형, 반정형, 비정형 데이터 모두 포함
		2) 관련 기술
			- 이전
				관계 데이터베이스
				SAS, SPASS와 같은 통계 패키지
				데이터 마이닝
				기계학습
			- 빅데이터
				저장기술 : 하둡, NoSQL
				분석기술 : 텍스트 마이닝, 오피니언 마이닝,
						소셜 네트워크 분석, 군집분석
				표현기술 : R언어
		3) 저장 장치
			- 데이터베이스나 데이터 웨어하우스와 같은 고가의 저장장치
			- 비용이 저렴한 클라우드 컴퓨팅 장비 활용 가능
			
13. 빅데이터 저장 기술(NoSQL)
	1) 등장 배경
		- 관계 데이터베이스를 대신한 새로운 대안의 필요성
			정형화된 데이터를 주로 처리하는 관계 데이터베이스
			- 빠른 속도로 대량 생산되는 다양한 유형의 비정형 데이터를 저장 및 관리하는데 적합하지 않음.
			단일 컴퓨터 환경에서 주로 사용되는 관계 데이터베이스
			- 여러 컴퓨터가 연결되어 하나의 시스템을 구성하는 클러스터 환경에는 확장성 측면에서 비효율적임.	
		- 새로운 대안으로 NoSQL등장
			관계 데이터베이스만 고집하지 말고 필요에 따라 다른 특성을 제공하는 데이터베이스를 사용하는 것이 좋다는 의미로 이해
	2) 의미
		- 빠른 속도로 생성되는 대량의 비정형 데이터를 저장하고 처리하기 위해 ACID(원자성, 일관성, 격리성, 지속성)을 위한
			트랜잭션 기능을 제공하지 않는 대신 저렴한 비용으로 여러 대의 컴퓨터에 데이터를 분산, 저장, 처리하는 것이 가능한 
			데이터 베이스이다.
	3) 특징
		- 관계 모델모다 더 융통성 있는 데이터 모델 사용
		- 스키마 없이 동작하기 때문에 데이터 구조를 미리 정의할 필요가 없고
			수시로 그 구조를 바꿀 수 있어 비정형 데이터를 저장하기에 적합
		- 대부분 오픈 소스로 제공
		
14. 관계 데이터베이스와 NoSQL의 비교
	1) 처리 데이터
		- 정형데이터
		- 정형데이터, 비정형(반정형 포함) 데이터
	2) 대용량 데이터
		- 대용량 처리시 성능 저하
		- 대용량 데이터 처리 지원
	3) 스키마
		- 미리 정해진 스키마가 존재
		- 스키마가 없거나 변경이 자유로움
	4) 트랜잭션
		- 트랜잭션을 통해 일관성 유지를 보장함
		- 트랜잭션을 지원하지 않아 일관성 유지를 보장하기 어려움
	5) 검색기능
		- 조인 등의 복잡한 검색 기능 제공
		- 단순한 데이터 검색 기능 제공
	6) 확장성
		- 클러스터 환경에 적합하지 않음
		- 클러스터 환경에 적합함
	7) 라이센스
		- 고가의 라이센스 비용
		- 오픈소스
	8) 대표적 사례
		- Oracle,MySql, MS SQL서버 등
		- 카산드라, 몽고DB, HBase 등

15. NoSQL의 종류
	1) 어떤 데이터 모델로 데이터를 저장하는지에 따라 4가지로 분류
		- 키-값 데이터베이스
		- 문서기반 데이터베이스
		- 컬럼기반 데이터베이스
		- 그래프기반 데이터베이스
	2) 키-값 데이터베이스
		- 특징
			키와 값의 쌍으로 데이터가 저장됨
			가장 단순한 형태
			이미지와 동영상은 물론 어떠한 형태의 값도 저장 가능
			질의 처리 속도 빠름
			키를 이용해 값 전체를 검색할 수는 있지만, 값의 일부를 검색하거나
				값의 내용을 이용한 질의는 할 수 없고 별도의 처리가 필요함
		- 대표적인 예
			아마존의 다이나모DB, 트위크 등에서 사용되는 레디스(Redis) 등
	3) 문서기반 데이터베이스
		- 특징
			키와 문서의 쌍으로 데이터를 저장
			- 트리 형태의 계층적 구조가 존재하는 JSON,XML 등과 같은 반정형 형태로 문서로 데이터를 저장
			- 문서는 객체지향에서 객체의 개념과 유사
			키-값 데이터 모델이 확장된 형태
			문서 전체를 검색하는 것도 가능하지만 XQuery와 같은 특별한 문서 대상
			질의 언어를 이용하면 문서 내의 일부를 검색할 수도 있음.
		- 대표적인 예
			몽고 DB(MongoDB), 카우치DB(CouchDB) 등
	4) 컬럼기반 데이터베이스
		- 특징
			컬럼 패밀리와 키의 쌍으로 데이터를 저장
				컬럼 패밀리는 관련 있는 컬럼 값들을 모아서 구성함
			관계 데이터 모델의 테이블과의 유사성
				컬럼 패밀리는 테이블에서 한 개의 튜플(행)을 구성하는 속성들의 모임으로 볼 수 있음.
				키가 각 튜플을 구분하는 것처럼 키로 각 컬럼 패밀리를 식별함.
			관계 데이터 모델의 테이블과의 차별성
				다양한 형태의 데이터를 값으로 저장할 수 있음
				컬럼 패밀리마다 컬럼의 구성을 다르게 할 수 있음.
		- 대표적인 예
			구글의 빅테이블(bigtable), Hbase, Cassandra 등
	5) 그래프 기반 데이터베이스
		- 특징
			노드에 데이터를 저장하고 간선으로 데이터 간의 관계를 표현하는 그래프 형태
			질의는 그래프 순회 과정을 통해 처리
			연관 데이터를 추천하거나 소셜 네트워크에서 친구 찾기를 수행하는데 적합
			트랜잭션을 통해 ACID를 지원하면, 클러스터 환경에는 적합하지 않음
				다른 NoSQL데이터 모델과의 차이점
		- 대표적인 예
			네오포제이(Neo4J), OrientDB, 아젠스그래프(AgensGraph) 등
		
	
	