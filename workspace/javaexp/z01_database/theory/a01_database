# 데이터베이스 개념
1. 데이터 베이스의 필요성
	1) 데이터와 정보
		- 데이터란
			현실 세계에서 단순히 관찰하거나 측정하여 수집한 사실이나 값
		- 정보란
			의사 결정에 유용하게 활용할 수 있도록 데이터를 처리한 결과물
	2) 정보 처리(information processing)
		- 데이터에서 정보를 추출하는 과정 또는 방법
	3) 정보 시스템과 데이터베이스
		- 정보 시스템
			조직 운영에 필요한 데이터를 수입하여 저장해 두었다가 필요할 때, 유용한 정보를 만들어주는 수단
			ex) 처리 프로그램 + 데이터베이스
		- 데이터베이스
			정보 시스템 안에서 데이터를 저장하고 있다가 필요할 때 제공하는 역할 담당
	4) 정보 시스템과 데이터베이스
		현실세계 ==> 데이터 ==> 처리 ==> 정보 ==> 의사결정자
							
						 데이터베이스
2. 데이터베이스의 정의와 특징
	1) 정의
		- 공유 데이터
		특정 조직의 여러 사용자가 함께 소유하고 이용할 수 있는 공용 데이터
			ex) 네이버에 데이터를 같이 공유
		- 통합 데이터
		최소의 중복과 통제 가능한 중복만 호용하는 데이터
			ex)사용자에 따라 정보로 필요로 하는 내용을 여러가지 형식에 의해 필터링하여 통합하는 것
		- 저장 데이터
		컴퓨터가 접근할 수 있는 매체에 저장된 데이터
			ex) 특정 정보를 저장 - 쇼핑몰에서 카트에 담기, 사용자 정보를 저장
		- 운영 데이터
		조직의 주요 기능을 수행하기 위해 지속적으로 꼭 필요한 데이터
			ex) 구매한 물건 정보를 가지고 있어서, 배송, 배송 결과 처리, 구매 후 후기 쓰기 등 지속적으로 처리 운영
			
	2) 특징
		- 실시간 접근성
		사용자의 데이터 요구에 실시간으로 응답
		- 계속 변화
		데이터의 계속적인 삽입, 삭제, 수정을 통해 현재의 정확한 데이터 유지
		- 동시 공유
		서로 다른 데이터의 동시 사용뿐만 아니라 같은 데이터의 동시사용도 지원
		- 내용 기반 참조
		데이터가 저장된 주소나 위치가 아닌 내용으로 참조 가능
		ex) 재고량이 1000개 이상인 제품이 이름을 검색하시오.
		
3. 데이터 과학 시대의 데이터
	1) 정형 데이터
		구조화된 데이터, 즉 미리 정해진 구조에 따라 저장된 데이터
		- 데이터 구조에 대한 설명과 데이터 내용은 별도로 유지된다.
		ex) 엑셀의 스트레드시트, 관계 데이터베이스의 테이블
	2) 반정형 데이터 *
		구조에 따라 저장된 데이터이지만 데이터 내용 안에 구조에 대한 설명이 함께 존재.
		구조를 파악하는 파싱과정이 필요, 보통파일 형태로 저장
		ex) 웹에서 데이터를 교환하기 위해 작성하는 html, xml, json 문서나 웹로드, 센서 데이터 등
	3) 비정형 데이터
		정해진 구조가 없이 저장된 데이터
		ex) 소셜 데이터의 텍스트, 영상, 이미지, 워드나 pdf문서와 같은 멀티미디어 데이터
		
4. 특성에 따른 데이터 분류
	1) 범주형 데이터(종류를 나타냄)
		범주로 구분할 수 있는 값, 즉 종류를 나타내는 값을 가진 데이터
		크기 비교와 산술적인 연산이 가능하지 않아 질적 데이터라고도 함.
		명목형 데이터 - 서열이 없는 경우
			성별, 혈액형, 학과명, 거주지역, 음식메뉴
		순서형 데이터 - 서열이 있는 경우
			학년, 학점, 회원 등급
			
	2) 수치형 데이터(크기 비교와 연산 가능)
		크기 비교와 산술적인 연산이 가능한 숫자 값을 가진 데이터
		양적 데이터라고도 함
		이산형 데이터 - 고객수, 판매량, 합격자수
			개수를 셀 수 있는 띄엄띄엄 단절된 숫자 값을 가지는 데이터
			ex) 정수형 데이터를 표현할 수 있는 데이터.
		연속형 데이터 - 키, 몸무게, 온도, 점수
			측정을 통해 얻어지는 연속적으로 이어진 숫자 값을 가지는 데이터
			
	3) 정성적 데이터와 정량적 데이터
		정성적 데이터 : 좁은 의미로는 범주형 데이터
			사람의 주관적인 생각과 평가를 기술한 비정형 데이터
		정량적 데이터 : 좁은 의미로는 수치형 데이터
			객관적인 측정을 통해 수치나 도형, 기호 등으로 표현한 정형데이터
			
# 데이터베이스 관리 시스템 개괄
1. 파일시스템
	단점 : 데이터 중복성, 데이터 종속성
	장점 : 저비용
2. 데이터베이스 관리시스템
	장점 : 중복의 최소화, 데이터 독립성 증진
	단점 : 고비용, 회복 기법이 복잡
3. 데이터베이스 관리시스템의 발전 과정
	1) 1세대 : 네트워크 DBMS, 계층 DBMS
	2) 2세대 : 관계 DBMS
	3) 3세대 : 객체지향 DBMS, 객체관계 DBMS
	4) 4세대 : NoSQL DBMS, newSQL DBMS
	
# 데이터베이스  관리 시스템의 등장 배경
1. 파일시스템
	- 데이터를 파일로 관리하기 위해 파일을 생성, 삭제, 수정, 검색하는 기능을 제공하는 소프트웨어
	- 응용 프로그램별로 필요한 데이터를 별도의 파일로 관리함
	ex) 고객관리 응용 프로그램
			고객데이터 파일 - (고객아이디, 고객명, 연락처, 주소), 등급, 비밀번호
		주문관리 응용 프로그램
			주문데이터 파일 - 주문번호, (고객아이디, 고객명, 연락처, 주소), 제품명, 수량
		위 내용 중에 (고객아이디, 고객명, 연락처, 주소) 중복 발생
2. 파일 시스템의 문제점
		1) 같은 내용의 데이터가 여러 파일에 중복 저장된다.
		2) 응용 프로그램이 데이터 파일에 종속적이다.
		3) 데이터 파일에 대한 동시 공유, 보안, 회복 기능이 부족하다.
		4) 응용 프로그램을 개발하기 쉽지 않다.
3. 파일 시스템의 주요 문제점
	1) 같은 내용의 데이터가 여러 파일에 중복 저장된다. ==> 데이터 중복성
		- 저장 공간의 낭비는 물론 데이터 일관성과 데이터 무결성을 유지하기 어려움
		ex) 한 고객의 연락처를 고객 데이터 파일에서만 수정하고 실수로 주문 데이터 파일에서 수정하지 않았다면???
			==> 데이터 일관성 유지하지 못한 ==> 데이터 무결성에 문제
	2) 데이터 중복성 문제를 해결하는 방법
		데이터 통합 : 고객관리 응용 프로그램, 주문 관리 응용 프로그램
	3) 파일 시스템의 주요 문제점
		응용 프로그램이 데이터 파일에 종속적이다. ==> 데이터 종속성
			- 사용하는 파일의 구조를 변경하면 응용 프로그램도 함께 변경해야 함.
			ex) 고객 파일						고객 파일
			apple 정소화		===변경==> 	apple	30	정소화
			banana 김선우					banana	45	김선우
			
# 데이터 베이스 관리시스템의 정의
1. 데이터 베이스 관리 시스템에서의 데이터 관리
	사용자	고객관리	응용프로그램	데이터베이스관리 시스템	데이터베이스	
			주문관리	응용프로그램						등급 비밀번호
													고객아이디 고객명 연락처
													주문번호 제품명 수량
2. 데이터베이스 관리 시스템의 주요 기능
	1) 정의 기능 : 데이터베이스 구조를 정의하거나 수정할 수 있다.
		ex) DB테이블 생성, 컬럼 수정/삭제
	2) 조작 기능 : 데이터를 삽입, 삭제, 수정, 검색하는 연산을 할 수 있다.	
		ex) select, insert, update, delete 명령으로 처리
	3) 제어 기능 : 데이터를 항상 정확하고 안전하게 유지할 수 있다.
		ex) DB서버 관리자에 의해 하드웨어적/소프트웨어적 관리
			사용자별 권한을 부여하여 효과적으로 데이터를 처리할 수 있게 처리
	
3. 데이터베이스 관리 시스템의 장/단점
	1) 장점
		데이터 중복을 통제할 수 있다.
			데이터베이스에 데이터를 통합하여 관리하므로 데이터 중복 문제 해결
		데이터 독립성이 확보된다
			응용 프로그램 대신 데이터베이스에 접근하고 관리하는 모든 책임 담당
			--> 응용 프로그램과 데이터베이스 사이에 독립성이 확보됨
		데이터를 동시 공유할 수 있다.
			동일한 데이터를 여러 응용 프로그램이 공유하여 동시 접근할 수 있게 지원
			--> 동시 접근 제어 기술 보유
		데이터 보안이 향상된다.
			중앙 집중식으로 데이터를 관리하므로 효율적인 접근제어 가능
			- 권한이 없는 사용자의 접근, 허용되지 않는 데이터와 연산에 대한 요청 차단
	2) 단점
		비용이 많이 든다.
		백업과 회복 방법이 복잡하다.
		중앙 집중 관리로 인한 취약점이 존재한다.
	ex) php/mysql ==> X
		front 개발, backend(X) ==> X
		front + backend + 정보처리 + 학위(학사 ==> 석사)
		
		개발 ==> PL ==> PM ==> 영업/개발대표
		개발 ==> 설계 ==> 시스템(부하) ==> 컨설턴트
		# 위에 진행되는 내용은 뒤섞일 수 있습니다.
					 
		
# 데이터베이스 관리 시스템의 발전 과정
1. 1세대 : 네트워크 DBMS, 계층 DBMS
	1) 네트워크 DBMS : 데이터베이스를 그래프 형태로 구성
		예) IDS(Integrated Data Store)
	2) 계층 DBMS : 데이터베이스를 트리 형태로 구성
		예) IMS(Information Management System)
2. 2세대 : 관계 DBMS
	1) 관계 DBMS : 데이터베이스를 테이블 형태로 구성
		예) 오라클(Oracle), MS SQL 서버, 액세스(Access), 인포믹스(informix), 
			MySQL, 마리아DB
3. 3세대 : 객체지향 DBMS, 객체 관계 DBMS
	1) 객체지향 DBMS : 객체를 이용해 데이터베이스를 구성
		예) 오투(O2), 온투스(ONTOS), 젬스톤(GemStone)
	2) 객체관계 DBMS : 객체지향 DBMS + 관계 DBMS
		예) 관계 DBMS 제품들이 객체지향 기능을 지원하면서 객체관계 DBMS로 분류되기도 함
			(오라클이 대표적)
4. 4세대 : NoSQL / NewSQL DBMS
	1) NoSQL DBMS : 비정형 데이터를 처리하는데 적합하고 확장성이 뛰어남
		- 안정성과 일관성 유지를 위한 복잡한 기능 포기
		- 데이터 구조를 미리 정해두지 않는 유연성을 가짐
		- 여러 대의 컴퓨터에 데이터를 분산하여 저장하고 처리하는 환경에서 주로 사용
		ex) MongoDB, HBase, Cassandra, Redis, Noe4j, OrientDB등
	2) NewSQL DBMS : 관계 DBMS의 장점 + NoSQL의 확장성 및 유연성
		- 정형 및 비정형 데이터를 안정적이고 빠르게 처리 가능
		ex) Google Spanner, VoltDB, NuoDB
			
				
			
							