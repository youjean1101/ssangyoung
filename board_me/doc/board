# 답변형 게시판
1. 주요 기능
	1) 초기 페이지 처리된 리스트 확인
		검색, 페이징처리(하단), 답글 : 계층형 sql 활용
	2) 등록 처리(답글 처리)
		기본 정보 등록(session으로 로그인된 사용자 id로 등록)
		첨부 파일 추가
	3) 상세화면
		수정 처리(session 작성자가 동일한 id인 경우만)
		삭제 처리(session 작성자가 동일한 id인 경우만)
		답글 처리
2. 개발 순서
	1) Database 설계
		메인 테이블(board) - 번호, 상위번호, 제목, 작성자, 내용
			등록일, 수정일, 조회수
		첨부파일 테이블(boardfile) - 번호(board의 번호), 파일명
			, 경로명, 등록일, 기타
	2) sql문 작성
		메일 조회 화면 sql
			가본 조회 sql
			답글을 리스트 되는 계층형 sql
		등록 sql
			메인 테이블(답글등록시와 동일)
			첨부 파일 테이블
		수정 sql
		삭제 sql
	3) vo 작성
		Board - list을 위한 VO
		BoardSch - 페이징 처리 및 기본 검색을 위한 vo
	4) DB 처리	
		dao
		mapper
	5) 비지니스 로직 처리
		service
	6) 요청값, 요청 url 및 모델, view를 위한 controller 처리
		
	7) 화면단 처리(view) 
		- 조회 화면
			- 조회 form
			- 데이터 리스트
			- 페이징 처리
		- 등록/답글 화면
			- 기본 등록 정보
			- 파일 업로드 처리
		- 상세화면 구현
			- 조회화면에서 상세화면 로딩

# 기본 스프링 환경 설정
1. 컨테이너 분리
	<init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:resource/a01_container.xml</param-value>
    </init-param>
2. 설정 파일 - DB 접속, 파일업로드..
	<context:property-placeholder location="classpath:resource/a00_config"/>
	a00_config
		jdbc.driver=oracle.jdbc.driver.OracleDriver
		jdbc.url=jdbc:oracle:thin:@localhost:1521:xe
		jdbc.user=scott
		jdbc.pass=tiger
		
3. a01_container.xml 컨테이너
	1) 뷰단(jsp) - suffix, prefix 처리 호출
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		     <property name="order" value="1"/>
		     <property name="prefix" value="/WEB-INF/view/"/> <!-- 접두어 -->
		     <property name="suffix" value=".jsp"/> <!-- 접미어 -->
		   </bean>

	2) 기타 DB를 위한 설정 파일 위치 선언.

# 메인리스트 화면 처리(1단계) - 기본 조회
1. conctroller를 통한 초기 화면 호출
	url mapping
2. 초기 조회 화면 구현(UI구현)
	1) form 검색을 위한 요청값 name 선언 : subject, writer
	2) list화면 구성
		no, subject, writer, regdte, readcnt
		번호, 제목, 작성자, 등록일, 조회수
-------------------------------------------------------

3. DB처리를 위한 구성
	1) db생성/기본 데이터 입력
	2) 조회를 위한 sql
		select * from board
		where 1=1
		and subject like '%'||''||'%'
		and writer like '%'||''||'%'
		order by regdte
	3) vo 작성
		- 검색을 위한 BoardSch
			subject 제목
			content 내용
			-- 페이지 처리를 위해 추후, 추가..
		- 데이터 리스트를 위한 Board
			no 글번호
			refno 답글번호
			subject 제목
			content 내용
			writer 작성자
			readcnt 조회수
			regdte 등록일
			updte 수정일
	4) 공통 mybatis 등록 alias board, boardsch
		mapper 등록
	5) dao
		public List<Board> boardList(BoardSch sch);
	6) mapper 처리
		<select id="boardList" resultType="board" parameterType="boardsch">
			select * 
			from board 
			WHERE 1=1
			AND subject LIKE '%'||#{subject}||'%'
			AND writer LIKE '%'||#{writer}||'%'
			order by regdte desc
		</select>
w.