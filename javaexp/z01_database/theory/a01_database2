# 데이터베이스 시스템
1. knowledge Map
	1) 사용자
		- 데이터베이스 관리자
		- 최종 사용자 : 최종 만들어진 응용프로그램을 통해서 간접적으로 DB서버 연동 확인
		- 응용 프로그래머 : 응용프로그래밍을 통해서 DB서버와 연동 처리
	2) 데이터언어
		- 데이터 정의어 : 테이블 선언, 구조 변경
		- 데이터 조작어 : 테이블의 내용을 조회, 등록, 수정, 삭제
		- 데이터 제어어 : 권한을 할당
	3) 데이터베이스
		- 3단계 구조
			외부단계 : 외부 스키마
			개념단계 : 개념 스키마
			내부다녜 : 내부 스키마
	4) 데이터베이스 관리시스템
		- 구성
			질의 처리기
			저장 데이터 관리자
# 데이터베이스 시스템(DBS:Database System)(
1. 데이터베이스에 데이터를 저장하고, 이를 관리하여 조직에 필요한 정보를 생성해주는 시스템
2. 데이터베이스의 구조
	1) 스키마 : 데이터베이스에 저장되는 데이터 구조와 제약조건을 정의한 것
		ex) 사원테이블 안에 사원번호(숫자형), 사원명(문자열) - 구조
			사원번호는 중복되지 않아야 한다. - 제약조건
	2) 인스턴스 : 스키마에 따라 데이터베이스에 실제로 저장된 값
	ex) 고객을 통해서 특정 테이블의 고객번호 이름 나이 주소의 유형을 확인하는 것을 스키마라고 한다.
		그리고, 이 스키마안에 1000, 홍길동, 25, 서울강남과 같이 저장된 값을 인스턴스라고 한다.
		
# 3단계 데이터베이스 구조
1. 미국 표준화 기관인 ANSI/SPARC에서 제안된 것으로
2. 데이터베이스를 쉽게 이해하고 이용할 수 있는 하나의 데이터베이스를 관점에 따라 세단계로 나눈 것을 말한다.
	1) 외부 단계 : 개별 사용자 관점
	2) 개념 단계 : 조직 전체의 관점
	3) 내부 단계 : 저장 장치의 관점
3. 각 단계별로 다른 추상화 제공
	- 내부 단계에서 외부 단계로 갈수록 추상화 레벨이 높아짐.	
	
# 3단계(외부단계) - 외부에서 접근할 때, 사용자 계정을 이용해서 접근
1. 데이터베이스를 개별 사용자 관점에서 이해하고 표현하는 단계
2. 하나의 데이터베이스에 외부 스키마가 여러개 존재할 수 있음.
	- 외부 단계에서 사용자에게 필요한 데이터베이스를 정의한 것
	- 각 사용자가 생각하는 데이터베이스의 모습, 즉 논리적 구조로 사용자마다 다름
	- 서브 스키마라고도 함

# 3단계(개념단계) - ERD 논리적 설계
1. 데이터베이스를 조직 전체의 관점에서 이해하고 표현하는 단계
	- 조직의 전체적 관점에서 여러 테이블의 관계를 설정하고 처리.
2. 하나의 데이터베이스에 개념 스키마가 하나만 존재함
	- 개념 스키마
		개념 단계에서 전체 데이터베이스의 논리적 구조를 정의한 것
		조직 전체의 관점에서 생각하는 데이터베이스의 모습
		전체 데이터베이스에 어떤 데이터가 저장되는지, 
		데이터들 간에는 어떤 관계가 존재하고 어떤 제약조건이 있는지에 대한 정의 뿐만 아니라,
		데이터에 대한 보안 정책이나 접근 권한에 대한 정의도 포함.
			테이블의 생성, 테이블간의 조인관계,
			각 테이블의 무결성 제약조건(key, not null, foreign key) 권한 처리
		
# 3단계(내부단계) - ERD 물리적 설계
1. 데이터베이스를 저장 장치의 관점에서 이해하고 표현하는 단계
2. 하나의 데이터베이스에 내부 스키마가 하나만 존재함
	- 내부 스키마
		전체 데이터베이스가 저장장치에 실제로 저장되는 방법을 정의한 것
		레코드 구조, 필드 크기, 레코드 경로 등 물리적 저장 구조를 정의
		
# 3단계 데이터베이스 구조의 사상 또는 매핑
1. 스키마 사이의 대응 관계
	1) 외부/개념 사상 : 외부 스키마와 개념 스키마의 대응 관계
		- 응용 인터페이스라고 함
	2) 개념/내부 사상 : 개념 스키마와 내부 스키마의 대응 관계
		- 저장 인터페이스라고도 함
	3) 미리 정의된 사상 정보를 이용해 사용자가 원하는 데이터에 접근
ps) 데이터베이스를 3단계 구조로 나누고 단계별로 스키마를 유지하며
	스키마 사이의 대응 관계를 정의하는 궁극적인 목적
	==> 데이터 독립성의 실현을 위한 것이다.
	
# 데이터 독립성
1. 하위 스키마를 변경하더라도 상위 스키마가 영향을 받지 않는 특징
2. 논리적 데이터 독립성
	- 개념 스키마가 변경되어도 외부 스키마는 영향을 받지 않음
	- 개념 스키마가 변경되면 관련된 외부/개념 사상만 정확하게 수정해주면 된다.
3. 물리적 데이터 독립성
	- 내부 스키마가 변경되어도 개념 스키마는 영향을 받지 않음.
	- 내부 스키마가 변경되면 관련된 개념/내부 사상만 정확하게 수정해주면 된다.
	
# 데이터 사전(data dictionary)
1. 시스템 카탈로그라고도 함
2. 데이터베이스에 저장되는 데이터에 관한 정보, 즉 메타 데이터를 유지하는 시스템
	데이터베이스
	메타 데이터 : 데이터에 대한 데이터
3. 스키마, 사상 정보, 다양한 제약조건 등을 저장
4. 데이터베이스 관리 시스템이 스스로 생성하고 유지함.
5. 일반 사용자도 접근이 가능하지만 저장 내용을 검색만 할 수 있음.

# 데이터 디렉토리
1. 데이터 사전에 있는 데이터에 실제로 접근하는데 필요한 위치 정보를 저장하는 시스템
	데이터베이스
2. 일반 사용자의 접근은 허용되지 않음

# 사용자 데이터베이스
1. 사용자가 실제로 이용하는 데이터가 저정되어 있는 일반 데이터베이스

