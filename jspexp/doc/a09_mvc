# mvc 패턴
1. 모델 1구조
	1) jsp을 이용한 단순한 모델
		페이지와 요청값 전달 ==> 해당 페이지 호출
	2) jsp에서 요청 처리 및 뷰 생성 처리
		- 구현이 쉬움
		- 요청 처리 및 뷰 생성 코드가 뒤섞여 코드가 복잡함
2. 모델 2구조(MVC)
	1) 서블릿이 요청을 처리하고 jsp가 뷰를 생성
		요청 url ==> 서블릿 호출(controller) ==> 모델 데이터 설정
		==> view단 호출(jsp 파일) ==> jsp(모델 데이터 el/jstl출력)
		==> client에 결과를 전달
	2) 모든 요청을 단일 서블릿에서 처리
		- 요청 처리 후 결과를 보여줄 jsp로 이동
3. MVC란?
	1) Model-View-Controller
		-  모델 : 비즈니스 영역의 상태 정보를 처리한다. 주로 DAO에 전달된 데이터를 로직에 의해서 모델 데이터를 만든다.
			controller단에서 이 데이터를 request.setAttribute("모델명", 데이터)로 설정한다.
		- 뷰 : 비즈니스 영역에 대한 받은 핵심데이터(모델)을 controller에서 전달 받아,
			사용자가 보게 될 화면을 처리하는 역할을 한다.
			모델데이터 jsp에서 el,jstl로 활용한다.
		- 컨트롤러 : 사용자의 요청 페이지, 요청값 등을 전달 받고,
			dao 등을 통해 만들어진 모델데이터를 설정하고,
			이 모델데이터를 view단을 호출함과 동시에 전달하는 역할을 한다.
			즉, 중재자 역할을 주로 한다.
4. 모델 클래스 처리 내용
	1) controller부터 요청 받은 
	2) 비즈니스 로직 수행
	3) 수행 결과 컨트롤러에 전달.
	
# MVC 예제
1. 1단계
	controller ==> view 바로 호출
2. 2단계
	controller ==> 모델데이터 설정 ==> view 호출
3. 3단계
	요청값 ==> controller ==> 모델데이터 설정 ==> view 호출
4. 4단계
	요청값 ==> controller ===> dao호출 모델데이터 설정 ==> view 호출
	