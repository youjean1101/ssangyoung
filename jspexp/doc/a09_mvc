# mvc 패턴
1. 모델 1구조
	1) jsp을 이용한 단순한 모델
		페이지와 요청값 전달 ==> 해당 페이지 호출
	2) jsp에서 요청 처리 및 뷰 생성 처리
		- 구현이 쉬움
		- 요청 처리 및 뷰 생성 코드가 뒤섞여 코드가 복잡함
2. 모델 2구조(MVC)
	1) 서블릿이 요청을 처리하고 jsp가 뷰를 생성
		요청 url ==> 서블릿 호출(controller) ==> 모델 데이터 설정
		==> view단 호출(jsp 파일) ==> jsp(모델 데이터 el/jstl출력)
		==> client에 결과를 전달
	2) 모든 요청을 단일 서블릿에서 처리
		- 요청 처리 후 결과를 보여줄 jsp로 이동
3. MVC란?
	1) Model-View-Controller
		-  모델 : 비즈니스 영역의 상태 정보를 처리한다. 주로 DAO에 전달된 데이터를 로직에 의해서 모델 데이터를 만든다.
			View에 전달될 핵심 데이터 처리
			controller단에서 이 데이터를 request.setAttribute("모델명", 데이터)로 설정한다.
		- 뷰 : 비즈니스 영역에 대한 받은 핵심데이터(모델)을 controller에서 전달 받아,
			사용자가 보게 될 화면을 처리하는 역할을 한다.
			모델데이터 jsp에서 el,jstl로 활용한다.
		- 컨트롤러 : 사용자의 요청 페이지, 요청값 등을 전달 받고,
			dao 등을 통해 만들어진 모델데이터를 설정하고,
			이 모델데이터를 view단을 호출함과 동시에 전달하는 역할을 한다.
			즉, 중재자 역할을 주로 한다.
4. 모델 클래스 처리 내용
	1) controller부터 요청 받은 
	2) 비즈니스 로직 수행
	3) 수행 결과 컨트롤러에 전달.
	
# MVC 예제
1. 1단계
	controller ==> 모델데이터 설정 ==> view 바로 호출
2. 2단계
	controller ==> 모델데이터 설정 ==> view 호출
3. 3단계
	요청값 ==> controller ==> 모델데이터 설정 ==> view 호출
4. 4단계
	1) 화면단 처리
	요청값 ==> controller ===> dao호출 모델데이터 설정 ==> view 호출
	2) ajax 처리
	
# MVC 2단계
1. controller단에서 모델 데이터 설정
	request.setAttribute("모델명", 모델데이터);
2. view단에서 모델값으로 화면출력
	${모델명}, ${모델명.property}

# MVC 3단계
1. 요청값 처리
	request.getParameter("요청키")
2. 모델처리
	request.setAttribute("모델명", 모델데이터);
3. view단 호출
4. jsp
	el/jsp 활용
	
ex) 구구단 예제 :
	1) 요구사항
	초기 화면이 입력값 단수(2~9)와 카운트(1~9)
	select로 선택하게 한다. 결과를 클릭했을 때,
	해당 값이 아래에 출력된다.
	2) 사용할 파일 및 프로세스 정
		Controller(A06_GugMvc.java, \gugu.do)
		View(WEB-INF\a01_mvc\a06_guguView.jsp)
		
		초기에 입력을 할수 있게 form을 만들고, 계산이라는 버튼이 나오게 한다.
		계산 버튼 클릭시, 요청값과 함게 controller에 호출되고 controller에서는 입력된 값을 받아, 
		숫자형태로 만들어 최종으로 들어갈 모델 데이터를 @@ X @@ = @@로 설정한다.
		view단에서 el로 모델 데이터를 호출하게 한다.
	3) 파일별 핵심 코드
		Controller(A06_GugMvc, \gugu.do)
		요청값
		String num01S = request.getParameter("num01");
		String num02S = request.getParameter("num02");
		모델데이터
		if(num01S!=null){ //초기화면과 구분
			int num01 = Integer.parseInt(num01S);
			int num02 = Integer.parseInt(num02S);
			request.setAttribute("result",
				num01 +" x " + num02 + " = " +
			(num01*num02));
		}
		뷰단 호출.
		String page = "\WEB-INF\a01_mvc\a06_guguView.jsp";
		request.getRequestDispatcher(page).forward(request,response);
		뷰단 코드
		
		<form action="\gugu.do"> // action은 현재 view를 호출할 controller를 호출할 때는 생략 가능
			<input type="text" name="num01" /> X
			<input type="text" name="num02" /> ?<br>
			==> 구구단의 단수/카운트는 select로..
			<input type="submit" value="계산" />
		</form>
		<h2>${result}</h2>
	4) 적용
		
# MVC 4단계
1. DB연동하여 검색 처리하는 화면 구현
2. 핵심 로직
	1) 요청값 처리 : 검색할 데이터
	2) 모델 데이터 : 검색할 데이터를 VO객체로 만들어
		Dao를 호출한 후, 해당 메서드의 파라미터로 전달한다.
		controller ==>	service ==> dao 호출 (생략)
		controller에서 dao호출하여 모델데이터 설정..
		
	3) 뷰단 호출
		 
	